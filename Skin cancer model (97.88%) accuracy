{"metadata":{"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/skin-cancer-model-97-88-accuracy-5c995f2a-1f6e-45bf-9228-f9b8047c59c1.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20250124/auto/storage/goog4_request&X-Goog-Date=20250124T003921Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=413fe6bb16726837734a472b999745a2fc7ac6f499405afe90aafb5d06bca96c8ed3c4ff9af55bd7ed4349e7748d9feaf22edb1f2f3055379e50d3573013824b6f851470f1c2e036a4c49f24b24b659aa5bf02eed75fbb1ddd5e8303b0010f457c7636c6f30d3d1c7b40c38f0aa505628a34c8c00383ed39b4003feef535b612d4fd1fe70b2e887075ae2ebff41598ca12fa506fea63cb3d8c5a429a13bc00eec74abaad7170268ddf9944bf994322abc10b83f55294bbf67fb03cb0fbc543f9f8a0e73cf33830126e49a9b4774636c5f1bb2d0f67aabe533455b49bf7d98e16ac8826386a6043a0fea3e06238b6457ba093d818b0beadc78b7bfb9a193bb005","timestamp":1737679213543}],"gpuType":"T4"},"accelerator":"GPU"},"nbformat_minor":0,"nbformat":4,"cells":[{"source":["# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES,\n","# THEN FEEL FREE TO DELETE THIS CELL.\n","# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n","# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n","# NOTEBOOK.\n","import kagglehub\n","kmader_skin_cancer_mnist_ham10000_path = kagglehub.dataset_download('kmader/skin-cancer-mnist-ham10000')\n","\n","print('Data source import complete.')\n"],"metadata":{"id":"tNCpvBYov93S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1737679380947,"user_tz":-330,"elapsed":120914,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}},"outputId":"9bdafd4b-1799-4379-b552-fc750d0cfc86"},"cell_type":"code","outputs":[{"output_type":"stream","name":"stdout","text":["Warning: Looks like you're using an outdated `kagglehub` version (installed: 0.3.5), please consider upgrading to the latest version (0.3.6).\n","Downloading from https://www.kaggle.com/api/v1/datasets/download/kmader/skin-cancer-mnist-ham10000?dataset_version_number=2...\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 5.20G/5.20G [01:03<00:00, 87.3MB/s]"]},{"output_type":"stream","name":"stdout","text":["Extracting files...\n"]},{"output_type":"stream","name":"stderr","text":["\n"]},{"output_type":"stream","name":"stdout","text":["Data source import complete.\n"]}],"execution_count":1},{"cell_type":"markdown","source":["# download packages"],"metadata":{"id":"VWGiZAXGv93Z"}},{"cell_type":"code","source":["!pip install plotly"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T21:11:56.810412Z","iopub.execute_input":"2022-04-03T21:11:56.810725Z","iopub.status.idle":"2022-04-03T21:12:06.709085Z","shell.execute_reply.started":"2022-04-03T21:11:56.810691Z","shell.execute_reply":"2022-04-03T21:12:06.708247Z"},"trusted":true,"id":"Mu7PK83Bv93c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1737679383544,"user_tz":-330,"elapsed":2611,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}},"outputId":"06b9f33a-7f69-4fdd-dd08-eaf9f1fc7e52"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: plotly in /usr/local/lib/python3.10/dist-packages (5.24.1)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly) (9.0.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from plotly) (24.2)\n"]}]},{"cell_type":"markdown","source":["# Import the libraries"],"metadata":{"id":"7CWUXxhDv93d"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","import io\n","import os\n","import tensorflow as tf\n","\n","from PIL import Image\n","from glob import glob\n","import itertools\n","\n","import plotly.graph_objects as go\n","import plotly.express as px\n","from plotly.subplots import make_subplots\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","\n","import tensorflow as tf\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D, Flatten, BatchNormalization, Dropout, Dense, MaxPool2D\n","from tensorflow.keras.callbacks import ReduceLROnPlateau, EarlyStopping\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, confusion_matrix\n","\n","from IPython.display import display\n","#To see the value of multiple statements at once.\n","from IPython.core.interactiveshell import InteractiveShell\n","InteractiveShell.ast_node_interactivity = \"all\""],"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2022-04-03T21:14:18.743727Z","iopub.execute_input":"2022-04-03T21:14:18.7447Z","iopub.status.idle":"2022-04-03T21:14:19.927521Z","shell.execute_reply.started":"2022-04-03T21:14:18.744647Z","shell.execute_reply":"2022-04-03T21:14:19.926895Z"},"trusted":true,"id":"9iyfpXgDv93e","executionInfo":{"status":"ok","timestamp":1737679399893,"user_tz":-330,"elapsed":16355,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["# prepare train test splits"],"metadata":{"id":"2f8Zmpo1v93g"}},{"cell_type":"code","source":["def prepare_for_train_test(X, Y):\n","    # Splitting into train and test set\n","    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=1)\n","\n","    # Prepare data for training and testing the model\n","    train_datagen = ImageDataGenerator(rescale = 1./255,\n","                                  rotation_range = 10,\n","                                  width_shift_range = 0.2,\n","                                  height_shift_range = 0.2,\n","                                  shear_range = 0.2,\n","                                  horizontal_flip = True,\n","                                  vertical_flip = True,\n","                                  fill_mode = 'nearest')\n","    train_datagen.fit(X_train)\n","    test_datagen = ImageDataGenerator(rescale = 1./255)\n","    test_datagen.fit(X_test)\n","    return X_train, X_test, Y_train, Y_test"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:51.323492Z","iopub.execute_input":"2022-04-03T20:35:51.323709Z","iopub.status.idle":"2022-04-03T20:35:51.330657Z","shell.execute_reply.started":"2022-04-03T20:35:51.323683Z","shell.execute_reply":"2022-04-03T20:35:51.32976Z"},"trusted":true,"id":"fqabhUeSv93h","executionInfo":{"status":"ok","timestamp":1737679399893,"user_tz":-330,"elapsed":11,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["# Prepare model"],"metadata":{"id":"yhCint9Kv93i"}},{"cell_type":"code","source":["def create_model():\n","    model = Sequential()\n","    model.add(Conv2D(16, kernel_size = (3,3), input_shape = (28, 28, 3), activation = 'relu', padding = 'same'))\n","    model.add(MaxPool2D(pool_size = (2,2)))\n","\n","    model.add(Conv2D(32, kernel_size = (3,3), activation = 'relu', padding = 'same'))\n","    model.add(MaxPool2D(pool_size = (2,2), padding = 'same'))\n","\n","    model.add(Conv2D(64, kernel_size = (3,3), activation = 'relu', padding = 'same'))\n","    model.add(MaxPool2D(pool_size = (2,2), padding = 'same'))\n","    model.add(Conv2D(128, kernel_size = (3,3), activation = 'relu', padding = 'same'))\n","    model.add(MaxPool2D(pool_size = (2,2), padding = 'same'))\n","\n","    model.add(Flatten())\n","    model.add(Dense(64, activation = 'relu'))\n","    model.add(Dense(32, activation='relu'))\n","    model.add(Dense(7, activation='softmax'))\n","\n","    optimizer = tf.keras.optimizers.Adam(learning_rate = 0.001)\n","\n","    model.compile(loss = 'sparse_categorical_crossentropy',\n","                 optimizer = optimizer,\n","                  metrics = ['accuracy'])\n","    print(model.summary())\n","    return model;\n"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:51.331728Z","iopub.execute_input":"2022-04-03T20:35:51.331918Z","iopub.status.idle":"2022-04-03T20:35:51.352743Z","shell.execute_reply.started":"2022-04-03T20:35:51.331894Z","shell.execute_reply":"2022-04-03T20:35:51.351914Z"},"trusted":true,"id":"HXTqpHxhv93j","executionInfo":{"status":"ok","timestamp":1737679399893,"user_tz":-330,"elapsed":11,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["# prepare the training plan"],"metadata":{"id":"tJ04jQuZv93l"}},{"cell_type":"code","source":["def train_model(model, X_train, Y_train, EPOCHS=25):\n","    early_stop = EarlyStopping(monitor='val_loss', patience=10, verbose=1,\n","                           mode='auto')\n","                               #, restore_best_weights=True)\n","\n","    reduce_lr = ReduceLROnPlateau(monitor='val_loss', factor=0.1, patience=3,\n","                              verbose=1, mode='auto')\n","\n","    history = model.fit(X_train,\n","                        Y_train,\n","                        validation_split=0.2,\n","                        batch_size = 64,\n","                        epochs = EPOCHS,\n","                        callbacks = [reduce_lr, early_stop])\n","    return history"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:42:36.68763Z","iopub.execute_input":"2022-04-03T20:42:36.688037Z","iopub.status.idle":"2022-04-03T20:42:36.695243Z","shell.execute_reply.started":"2022-04-03T20:42:36.688Z","shell.execute_reply":"2022-04-03T20:42:36.694273Z"},"trusted":true,"id":"jWOz_C3iv93l","executionInfo":{"status":"ok","timestamp":1737679399894,"user_tz":-330,"elapsed":11,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["# test the model"],"metadata":{"id":"zyYdUzptv93m"}},{"cell_type":"code","source":["def test_model(model, X_test, Y_test):\n","    model_acc = model.evaluate(X_test, Y_test, verbose=0)[1]\n","    print(\"Test Accuracy: {:.3f}%\".format(model_acc * 100))\n","    y_true = np.array(Y_test)\n","    y_pred = model.predict(X_test)\n","    y_pred = np.array(list(map(lambda x: np.argmax(x), y_pred)))\n","    clr = classification_report(y_true, y_pred, target_names=label_mapping.values())\n","    print(clr)\n","\n","    sample_data = X_test[:15]\n","    plt.figure(figsize=(22, 12))\n","    for i in range(15):\n","        plt.subplot(3, 5, i + 1)\n","        plt.imshow(sample_data[i])\n","        plt.title(label_mapping[y_true[i][0]] + '|' + label_mapping[y_pred[i]])\n","        plt.axis(\"off\")\n","    plt.show()"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:51.365923Z","iopub.execute_input":"2022-04-03T20:35:51.366284Z","iopub.status.idle":"2022-04-03T20:35:51.375618Z","shell.execute_reply.started":"2022-04-03T20:35:51.366244Z","shell.execute_reply":"2022-04-03T20:35:51.374809Z"},"trusted":true,"id":"79nN-z3gv93m","executionInfo":{"status":"ok","timestamp":1737679399894,"user_tz":-330,"elapsed":11,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["# training curves plot"],"metadata":{"id":"0z_KuTbHv93n"}},{"cell_type":"code","source":["def plot_model_training_curve(history):\n","    fig = make_subplots(rows=1, cols=2, subplot_titles=['Model Accuracy', 'Model Loss'])\n","    fig.add_trace(\n","        go.Scatter(\n","            y=history.history['accuracy'],\n","            name='train_acc'),\n","        row=1, col=1)\n","    fig.add_trace(\n","        go.Scatter(\n","            y=history.history['val_accuracy'],\n","            name='val_acc'),\n","        row=1, col=1)\n","    fig.add_trace(\n","        go.Scatter(\n","            y=history.history['loss'],\n","            name='train_loss'),\n","        row=1, col=2)\n","    fig.add_trace(\n","        go.Scatter(\n","            y=history.history['val_loss'],\n","            name='val_loss'),\n","        row=1, col=2)\n","    fig.show()"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:51.376974Z","iopub.execute_input":"2022-04-03T20:35:51.377238Z","iopub.status.idle":"2022-04-03T20:35:51.388488Z","shell.execute_reply.started":"2022-04-03T20:35:51.377208Z","shell.execute_reply":"2022-04-03T20:35:51.387985Z"},"trusted":true,"id":"BvNf1z33v93n","executionInfo":{"status":"ok","timestamp":1737679399894,"user_tz":-330,"elapsed":11,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["# multi class confusion matrix"],"metadata":{"id":"Q9YyXxLOv93o"}},{"cell_type":"code","source":["def create_confusion_matrix(model, x_test_normalized, y_test, cm_plot_labels, name):\n","    #Get the true and predicted labels\n","    y_predict_classes, y_true_classes = cal_true_pred_classes(model, x_test_normalized, y_test)\n","\n","    #Compute the confusion matrix\n","    confusion_matrix_computed = confusion_matrix(y_true_classes, y_predict_classes)\n","\n","    #Plot the confusion matrix\n","    plot_confusion_matrix(confusion_matrix_computed, cm_plot_labels, name)"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:51.389729Z","iopub.execute_input":"2022-04-03T20:35:51.390116Z","iopub.status.idle":"2022-04-03T20:35:51.399089Z","shell.execute_reply.started":"2022-04-03T20:35:51.390014Z","shell.execute_reply":"2022-04-03T20:35:51.398305Z"},"trusted":true,"id":"yFShY4LRv93o","executionInfo":{"status":"ok","timestamp":1737679399894,"user_tz":-330,"elapsed":10,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["def plot_confusion_matrix(cm, classes,\n","                          name,\n","                          normalize=False,\n","                          title='Confusion matrix',\n","                          cmap=plt.cm.Blues):\n","\n","    plt.figure(figsize=(8,6))\n","    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n","    plt.title(name)\n","    plt.colorbar()\n","    tick_marks = np.arange(len(classes))\n","    plt.xticks(tick_marks, classes, rotation=45)\n","    plt.yticks(tick_marks, classes)\n","\n","    if normalize:\n","        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n","\n","    thresh = cm.max() / 2.\n","    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n","        plt.text(j, i, cm[i, j],\n","                 horizontalalignment=\"center\",\n","                 color=\"white\" if cm[i, j] > thresh else \"black\")\n","\n","#     b, t = plt.ylim()\n","#     b += 0.5\n","#     t -= 0.5\n","#     plt.ylim(b, t)\n","\n","    plt.tight_layout()\n","    plt.ylabel('True Labels')\n","    plt.xlabel('Predicted Labels')\n","    fig = plt\n","    fig.savefig('C:\\\\Users\\\\Marwan Gamal\\\\Downloads\\\\Skin Cancer\\\\Photo\\\\' + name + '_confusion_matrix.png', dpi=300)"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:51.400218Z","iopub.execute_input":"2022-04-03T20:35:51.400526Z","iopub.status.idle":"2022-04-03T20:35:51.410957Z","shell.execute_reply.started":"2022-04-03T20:35:51.400486Z","shell.execute_reply":"2022-04-03T20:35:51.410225Z"},"trusted":true,"id":"F94nXr1Pv93o","executionInfo":{"status":"ok","timestamp":1737679399894,"user_tz":-330,"elapsed":10,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["# read the data"],"metadata":{"id":"hKviZM0Mv93p"}},{"cell_type":"code","source":["base_skin_dir = os.path.join('..', 'input')\n","\n","# Merging images from both folders HAM10000_images_part1.zip and HAM10000_images_part2.zip into one dictionary\n","\n","imageid_path_dict = {os.path.splitext(os.path.basename(x))[0]: x\n","                     for x in glob(os.path.join(base_skin_dir,\"skin-cancer-mnist-ham10000/\", '*', '*.jpg'))}\n","lesion_type_dict = {\n","    'nv': 'Melanocytic nevi (nv)',\n","    'mel': 'Melanoma (mel)',\n","    'bkl': 'Benign keratosis-like lesions (bkl)',\n","    'bcc': 'Basal cell carcinoma (bcc)',\n","    'akiec': 'Actinic keratoses (akiec)',\n","    'vasc': 'Vascular lesions (vasc)',\n","    'df': 'Dermatofibroma (df)'\n","}\n","label_mapping = {\n","    0: 'nv',\n","    1: 'mel',\n","    2: 'bkl',\n","    3: 'bcc',\n","    4: 'akiec',\n","    5: 'vasc',\n","    6: 'df'\n","}\n","reverse_label_mapping = dict((value, key) for key, value in label_mapping.items())"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:51.412034Z","iopub.execute_input":"2022-04-03T20:35:51.41228Z","iopub.status.idle":"2022-04-03T20:35:52.068512Z","shell.execute_reply.started":"2022-04-03T20:35:51.412245Z","shell.execute_reply":"2022-04-03T20:35:52.067726Z"},"trusted":true,"id":"acBGf1Gav93p","executionInfo":{"status":"ok","timestamp":1737679399895,"user_tz":-330,"elapsed":11,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["data = pd.read_csv(os.path.join(base_skin_dir,\"skin-cancer-mnist-ham10000/\",'HAM10000_metadata.csv'))\n","\n","# Creating New Columns for better readability\n","\n","# data['path'] = data['image_id'].map(imageid_path_dict.get)\n","# data['cell_type'] = data['dx'].map(lesion_type_dict.get)\n","# data['cell_type_idx'] = pd.Categorical(skin_df['cell_type']).codes\n"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:52.071061Z","iopub.execute_input":"2022-04-03T20:35:52.071284Z","iopub.status.idle":"2022-04-03T20:35:52.106441Z","shell.execute_reply.started":"2022-04-03T20:35:52.07126Z","shell.execute_reply":"2022-04-03T20:35:52.105681Z"},"trusted":true,"id":"E2qAGm5rv93q","colab":{"base_uri":"https://localhost:8080/","height":356},"executionInfo":{"status":"error","timestamp":1737679400377,"user_tz":-330,"elapsed":491,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}},"outputId":"bbc802e6-ee4b-4694-db6c-6777f569b777"},"execution_count":12,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '../input/skin-cancer-mnist-ham10000/HAM10000_metadata.csv'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-ea03c634e7f6>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbase_skin_dir\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"skin-cancer-mnist-ham10000/\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'HAM10000_metadata.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Creating New Columns for better readability\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# data['path'] = data['image_id'].map(imageid_path_dict.get)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1024\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1025\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1026\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1027\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    619\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 620\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    622\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1619\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1620\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1622\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1878\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1879\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1880\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1881\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1882\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    871\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    872\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 873\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    874\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    875\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '../input/skin-cancer-mnist-ham10000/HAM10000_metadata.csv'"]}]},{"cell_type":"code","source":["# Now lets see the sample of tile_df to look on newly made columns\n","data.head()"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:52.107632Z","iopub.execute_input":"2022-04-03T20:35:52.108134Z","iopub.status.idle":"2022-04-03T20:35:52.13084Z","shell.execute_reply.started":"2022-04-03T20:35:52.108105Z","shell.execute_reply":"2022-04-03T20:35:52.130103Z"},"trusted":true,"id":"fOvcbW0Ev93q","executionInfo":{"status":"aborted","timestamp":1737679400378,"user_tz":-330,"elapsed":18,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.describe(exclude=[np.number])"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:52.13186Z","iopub.execute_input":"2022-04-03T20:35:52.132251Z","iopub.status.idle":"2022-04-03T20:35:52.182911Z","shell.execute_reply.started":"2022-04-03T20:35:52.132219Z","shell.execute_reply":"2022-04-03T20:35:52.182359Z"},"trusted":true,"id":"NOuT13w6v93q","executionInfo":{"status":"aborted","timestamp":1737679400380,"user_tz":-330,"elapsed":19,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.isnull().any().sum()"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T21:16:07.37713Z","iopub.execute_input":"2022-04-03T21:16:07.377842Z","iopub.status.idle":"2022-04-03T21:16:07.407047Z","shell.execute_reply.started":"2022-04-03T21:16:07.377798Z","shell.execute_reply":"2022-04-03T21:16:07.406467Z"},"trusted":true,"id":"qcTY2bPFv93q","executionInfo":{"status":"aborted","timestamp":1737679400381,"user_tz":-330,"elapsed":20,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Imputing the Null values and preparing the data"],"metadata":{"id":"tEALunsPv93r"}},{"cell_type":"code","source":["# Handling null values\n","data['age'].fillna(value=int(data['age'].mean()), inplace=True)\n","# Converting dtype of age to int32\n","data['age'] = data['age'].astype('int32')"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:52.183851Z","iopub.execute_input":"2022-04-03T20:35:52.184405Z","iopub.status.idle":"2022-04-03T20:35:52.189825Z","shell.execute_reply.started":"2022-04-03T20:35:52.184373Z","shell.execute_reply":"2022-04-03T20:35:52.189002Z"},"trusted":true,"id":"xlsWbzvDv93r","executionInfo":{"status":"aborted","timestamp":1737679400381,"user_tz":-330,"elapsed":20,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Adding cell_type and image_path columns\n","data['cell_type'] = data['dx'].map(lesion_type_dict.get)\n","data['path'] = data['image_id'].map(imageid_path_dict.get)"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:52.191179Z","iopub.execute_input":"2022-04-03T20:35:52.191521Z","iopub.status.idle":"2022-04-03T20:35:52.205322Z","shell.execute_reply.started":"2022-04-03T20:35:52.191479Z","shell.execute_reply":"2022-04-03T20:35:52.204586Z"},"trusted":true,"id":"NigzG3dYv93r","executionInfo":{"status":"aborted","timestamp":1737679400381,"user_tz":-330,"elapsed":20,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Adding image pixels\n","data['image_pixel'] = data['path'].map(lambda x: np.asarray(Image.open(x).resize((28,28))))"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:35:52.206593Z","iopub.execute_input":"2022-04-03T20:35:52.206838Z","iopub.status.idle":"2022-04-03T20:38:48.191658Z","shell.execute_reply.started":"2022-04-03T20:35:52.20681Z","shell.execute_reply":"2022-04-03T20:38:48.190839Z"},"trusted":true,"id":"VdMKnnPxv93s","executionInfo":{"status":"aborted","timestamp":1737679400381,"user_tz":-330,"elapsed":20,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Displaying 2 images for each label\n","sample_data = data.groupby('dx').apply(lambda df: df.iloc[:2, [9, 7]])\n","plt.figure(figsize=(22, 32))\n","for i in range(14):\n","    plt.subplot(7, 5, i + 1)\n","    plt.imshow(np.squeeze(sample_data['image_pixel'][i]))\n","    img_label = sample_data['cell_type'][i]\n","    plt.title(img_label)\n","    plt.axis(\"off\")\n","plt.show();"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:38:48.19282Z","iopub.execute_input":"2022-04-03T20:38:48.193032Z","iopub.status.idle":"2022-04-03T20:38:49.124626Z","shell.execute_reply.started":"2022-04-03T20:38:48.193007Z","shell.execute_reply":"2022-04-03T20:38:49.12377Z"},"trusted":true,"id":"WAtpY6-Bv93s","executionInfo":{"status":"aborted","timestamp":1737679400383,"user_tz":-330,"elapsed":142060,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['label'] = data['dx'].map(reverse_label_mapping.get)\n","\n","data = data.sort_values('label')\n","data = data.reset_index()"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:38:49.12581Z","iopub.execute_input":"2022-04-03T20:38:49.126063Z","iopub.status.idle":"2022-04-03T20:38:49.142597Z","shell.execute_reply.started":"2022-04-03T20:38:49.126022Z","shell.execute_reply":"2022-04-03T20:38:49.141764Z"},"trusted":true,"id":"CG2eR7Ncv93s","executionInfo":{"status":"aborted","timestamp":1737679400383,"user_tz":-330,"elapsed":142059,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["counter = 0\n","frames = [data]\n","for i in [4,4,11,17,45,52]:\n","    counter+=1\n","    index = data[data['label'] == counter].index.values\n","    df_index = data.iloc[int(min(index)):int(max(index)+1)]\n","    df_index = df_index.append([df_index]*i, ignore_index = True)\n","    frames.append(df_index)\n"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:38:49.143491Z","iopub.execute_input":"2022-04-03T20:38:49.143749Z","iopub.status.idle":"2022-04-03T20:38:49.240675Z","shell.execute_reply.started":"2022-04-03T20:38:49.14372Z","shell.execute_reply":"2022-04-03T20:38:49.239861Z"},"trusted":true,"id":"rMzucgi0v93s","executionInfo":{"status":"aborted","timestamp":1737679400384,"user_tz":-330,"elapsed":142059,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["final_data = pd.concat(frames)"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:38:49.242013Z","iopub.execute_input":"2022-04-03T20:38:49.242261Z","iopub.status.idle":"2022-04-03T20:38:49.259669Z","shell.execute_reply.started":"2022-04-03T20:38:49.242233Z","shell.execute_reply":"2022-04-03T20:38:49.259108Z"},"trusted":true,"id":"kFkQFFwEv93u","executionInfo":{"status":"aborted","timestamp":1737679400384,"user_tz":-330,"elapsed":142059,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(data.shape)\n","print(final_data.shape)"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:38:49.26044Z","iopub.execute_input":"2022-04-03T20:38:49.260626Z","iopub.status.idle":"2022-04-03T20:38:49.265698Z","shell.execute_reply.started":"2022-04-03T20:38:49.260602Z","shell.execute_reply":"2022-04-03T20:38:49.264846Z"},"trusted":true,"id":"2y7KJmOTv93u","executionInfo":{"status":"aborted","timestamp":1737679400385,"user_tz":-330,"elapsed":142060,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ORIGINAL DATA\n","# Converting image pixel columnm into required format\n","X_orig = data['image_pixel'].to_numpy()\n","X_orig = np.stack(X_orig, axis=0)\n","Y_orig = np.array(data.iloc[:, -1:])\n","print(X_orig.shape)\n","print(Y_orig.shape)"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:38:49.267261Z","iopub.execute_input":"2022-04-03T20:38:49.267552Z","iopub.status.idle":"2022-04-03T20:38:49.308729Z","shell.execute_reply.started":"2022-04-03T20:38:49.267514Z","shell.execute_reply":"2022-04-03T20:38:49.30783Z"},"trusted":true,"id":"TI2aQW-Fv93v","executionInfo":{"status":"aborted","timestamp":1737679400387,"user_tz":-330,"elapsed":142061,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# AUGMENTED DATA\n","# Converting image pixel columnm into required format\n","X_aug = final_data['image_pixel'].to_numpy()\n","X_aug = np.stack(X_aug, axis=0)\n","Y_aug = np.array(final_data.iloc[:, -1:])\n","print(X_aug.shape)\n","print(Y_aug.shape)"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:38:49.311799Z","iopub.execute_input":"2022-04-03T20:38:49.312016Z","iopub.status.idle":"2022-04-03T20:38:49.453215Z","shell.execute_reply.started":"2022-04-03T20:38:49.31199Z","shell.execute_reply":"2022-04-03T20:38:49.452359Z"},"trusted":true,"id":"X6TTP6pyv93v","executionInfo":{"status":"aborted","timestamp":1737679400388,"user_tz":-330,"elapsed":142062,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# For Original Dataset\n","X_train_orig, X_test_orig, Y_train_orig, Y_test_orig = prepare_for_train_test(X_orig, Y_orig)"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:38:49.454522Z","iopub.execute_input":"2022-04-03T20:38:49.455143Z","iopub.status.idle":"2022-04-03T20:38:49.556294Z","shell.execute_reply.started":"2022-04-03T20:38:49.455096Z","shell.execute_reply":"2022-04-03T20:38:49.555353Z"},"trusted":true,"id":"hJgIMpMev93w","executionInfo":{"status":"aborted","timestamp":1737679400939,"user_tz":-330,"elapsed":45,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model =create_model()"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:43:24.905889Z","iopub.execute_input":"2022-04-03T20:43:24.906292Z","iopub.status.idle":"2022-04-03T20:43:25.009731Z","shell.execute_reply.started":"2022-04-03T20:43:24.906243Z","shell.execute_reply":"2022-04-03T20:43:25.009116Z"},"trusted":true,"id":"nY5Th9HQv93w","executionInfo":{"status":"aborted","timestamp":1737679400939,"user_tz":-330,"elapsed":39,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train_aug, X_test_aug, Y_train_aug, Y_test_aug = prepare_for_train_test(X_aug, Y_aug)"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:43:45.854713Z","iopub.execute_input":"2022-04-03T20:43:45.855023Z","iopub.status.idle":"2022-04-03T20:43:46.30518Z","shell.execute_reply.started":"2022-04-03T20:43:45.854988Z","shell.execute_reply":"2022-04-03T20:43:46.304238Z"},"trusted":true,"id":"n2LpNI1kv93x","executionInfo":{"status":"aborted","timestamp":1737679400940,"user_tz":-330,"elapsed":39,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model2_history = train_model(model, X_train_aug, Y_train_aug, 50)"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:43:47.238164Z","iopub.execute_input":"2022-04-03T20:43:47.238451Z","iopub.status.idle":"2022-04-03T20:48:10.043196Z","shell.execute_reply.started":"2022-04-03T20:43:47.238419Z","shell.execute_reply":"2022-04-03T20:48:10.042514Z"},"trusted":true,"id":"PdiRjnntv93x","executionInfo":{"status":"aborted","timestamp":1737679400945,"user_tz":-330,"elapsed":44,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:54:00.235761Z","iopub.execute_input":"2022-04-03T20:54:00.236343Z","iopub.status.idle":"2022-04-03T20:54:00.242535Z","shell.execute_reply.started":"2022-04-03T20:54:00.236293Z","shell.execute_reply":"2022-04-03T20:54:00.241726Z"},"trusted":true,"id":"5Blu10t7v936","executionInfo":{"status":"aborted","timestamp":1737679400945,"user_tz":-330,"elapsed":44,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# save model"],"metadata":{"id":"LjuUiN36v937"}},{"cell_type":"code","source":["model.save('Skin_Cancer.sav')"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:53:11.605945Z","iopub.execute_input":"2022-04-03T20:53:11.606272Z","iopub.status.idle":"2022-04-03T20:53:13.451561Z","shell.execute_reply.started":"2022-04-03T20:53:11.606236Z","shell.execute_reply":"2022-04-03T20:53:13.450742Z"},"trusted":true,"id":"uhBkCbO-v937","executionInfo":{"status":"aborted","timestamp":1737679400946,"user_tz":-330,"elapsed":44,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# save model weights"],"metadata":{"id":"JNNvDrPHv937"}},{"cell_type":"code","source":["model.save_weights(\"Skin_Cancer.hdf5\")"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:56:52.58402Z","iopub.execute_input":"2022-04-03T20:56:52.584349Z","iopub.status.idle":"2022-04-03T20:56:52.628425Z","shell.execute_reply.started":"2022-04-03T20:56:52.584316Z","shell.execute_reply":"2022-04-03T20:56:52.627784Z"},"trusted":true,"id":"-Rr2hi2Nv938","executionInfo":{"status":"aborted","timestamp":1737679400946,"user_tz":-330,"elapsed":38,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from IPython.display import FileLink\n","FileLink('Skin_Cancer.hdf5')"],"metadata":{"execution":{"iopub.status.busy":"2022-04-03T20:57:05.274769Z","iopub.execute_input":"2022-04-03T20:57:05.275324Z","iopub.status.idle":"2022-04-03T20:57:05.281608Z","shell.execute_reply.started":"2022-04-03T20:57:05.275281Z","shell.execute_reply":"2022-04-03T20:57:05.280674Z"},"trusted":true,"id":"Vqi3NBeMv938","executionInfo":{"status":"aborted","timestamp":1737679400946,"user_tz":-330,"elapsed":37,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"UwG90IYjv938","executionInfo":{"status":"aborted","timestamp":1737679400951,"user_tz":-330,"elapsed":42,"user":{"displayName":"akshat shukla","userId":"01979925258072508501"}}},"execution_count":null,"outputs":[]}]}